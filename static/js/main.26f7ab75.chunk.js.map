{"version":3,"sources":["media/s_cocktail_photo.jpg","media/mainMenu/meal_icon_400.png","media/mainMenu/cocktail_icon_400.png","components/Picture.js","actions/index.js","data/states.js","components/contentComponents/MainMenu.js","components/contentComponents/RecipePage.js","components/contentComponents/Recipe.js","components/Content.js","components/Home.js","serviceWorker.js","reducers/result.js","reducers/state.js","reducers/recipe.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Picture","state","height","strength","window","innerWidth","this","setState","updatePictureDimensions","addEventListener","bind","removeEventListener","react_default","a","createElement","dist","bgImage","coconut_pic","blur","bgImageAlt","style","Typist_default","cursor","hideWhenDone","avgTypingSpeed","className","Component","connect","currentState","setCurrentState","newState","type","setCurrentResult","result","currentResult","mealDB","component","currentDB","itemIdProp","itemProp","listProp","imgProp","numOfIngredients","cocktailDB","noneDB","MainMenu","MealPic","require","CocktailPic","width","onSetCurrentState","onSetCurrentResult","receivedRecipes","searchedWord","arg","props","_this2","Fade_default","onClick","react_router_dom","to","mdbreact_esm","hover","zoom","alt","src","mapActionsToProps","RecipePage","requestedRecipes","nothingReturned","picSize","getRequestedRecipes","_callee","e","recipeRequest","recipeApi","recievedResult","regenerator_default","wrap","_context","prev","next","target","elements","value","preventDefault","fetch","concat","_this","sent","json","stop","match","path","length","onSetCurrentRecipe","event","inputValue","onSubmit","name","autoComplete","onChange","searchedWordChange","map","recipe","key","pathname","currentRecipe","Recipe","recipePic","ingridients","recipeTitle","instruction","recipeVideoID","recipeSource","scrollTo","setUp","strInstructions","setYouTubeId","setUpIngredients","ingridientsArray","i","numberOfIngredients","currentIngredient","currentMeasurement","id","ingridientName","measurement","videoURL","strYoutube","undefined","substring","ingredient","renderTableData","title","frameBorder","allowFullScreen","Content","react_router","exact","render","contentComponents_MainMenu","contentComponents_RecipePage","contentComponents_Recipe","Home","components_Picture","components_Content","Boolean","location","hostname","initialResult","setResult","arguments","action","initialState","setRecipe","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","console","log","loadFromLocalStorage","store","createStore","rootReducer","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","es","components_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26f7ab75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/s_cocktail_photo.dcee0d83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal_icon_400.dea90c5c.png\";","module.exports = __webpack_public_path__ + \"static/media/cocktail_icon_400.ce609f88.png\";","import React, {Component} from 'react';\nimport coconut_pic from '../media/s_cocktail_photo.jpg';\nimport '../styles/Picture.css';\nimport { Parallax } from 'react-parallax';\nimport {connect} from 'react-redux';\nimport Typist from 'react-typist-updated';\n\nclass Picture extends Component {\n  state = {\n    height: 0,\n    strength:0\n  }\n\n  updatePictureDimensions() {\n    if(window.innerWidth < 900) {\n      this.setState({height: 200, strength: 300});\n    } else {\n      this.setState({height: 400, strength: 450});\n    }\n  }\n\n  componentDidMount(){\n    this.updatePictureDimensions();\n    window.addEventListener(\"resize\", this.updatePictureDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updatePictureDimensions.bind(this));\n  }\n\n  render(){\n    return(\n      <div>\n        <Parallax\n          bgImage={coconut_pic}\n          blur={0}\n          bgImageAlt=\"the cat\"\n          strength={this.state.strength}\n          >\n          <div style={{ height: this.state.height }}>\n            <Typist cursor={{ hideWhenDone: true }} avgTypingSpeed={40}>\n              <div className=\"introBoxText\">\n                Lets&nbsp;get&nbsp;that&nbsp;recipe!\n              </div>\n            </Typist>\n          </div>\n        </Parallax>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentState: state.currentState\n});\n\nexport default connect(mapStateToProps)(Picture);\n","export const setCurrentState = newState => ({\n  type: \"SET_CURRENT_STATE\",\n  currentState: newState\n})\n\nexport const setCurrentResult = result => ({\n  type: \"SET_CURRENT_RESULT\",\n  currentResult: result\n})\n\nexport const setCurrentRecipe = recipe => ({\n  type: \"SET_CURRENT_RECIPE\",\n  currentRecipe: recipe\n})\n","export const mealDB = {\n  component: \"meal\",\n  currentDB: \"themealdb\",\n  itemIdProp: \"idMeal\",\n  itemProp: \"strMeal\",\n  listProp: \"meals\",\n  imgProp:\"strMealThumb\",\n  numOfIngredients: 20\n}\n\nexport const cocktailDB = {\n  component: \"cocktail\",\n  currentDB: \"thecocktaildb\",\n  itemIdProp: \"idDrink\",\n  itemProp: \"strDrink\",\n  listProp: \"drinks\",\n  imgProp:\"strDrinkThumb\",\n  numOfIngredients: 15\n}\n\nexport const noneDB = {\n  component: \"none\",\n  currentDB: \"none\",\n  itemIdProp: \"none\",\n  itemProp: \"none\",\n  listProp: \"none\",\n  imgProp:\"none\",\n  numOfIngredients: 0\n}\n","import React, { Component } from 'react';\nimport { MDBView } from 'mdbreact';\nimport '../../styles/mainMenu.css';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setCurrentState, setCurrentResult} from '../../actions/index';\nimport {mealDB, cocktailDB, noneDB} from '../../data/states'\nimport Fade from 'react-reveal/Fade';\n\nclass MainMenu extends Component{\n\n  state = {\n    MealPic: require('../../media/mainMenu/meal_icon_400.png'),\n    CocktailPic: require('../../media/mainMenu/cocktail_icon_400.png'),\n    width: 0\n  }\n\n  updatePictureDimensions() {\n    if(window.innerWidth < 600) {\n      this.setState({\n        width: 150\n      });\n    } else if(window.innerWidth < 900){\n      this.setState({\n        width: 200\n      });\n    } else {\n      this.setState({\n        width: 400\n      });\n    }\n  }\n\n  componentDidMount(){\n    window.addEventListener(\"resize\", this.updatePictureDimensions.bind(this));\n    this.updatePictureDimensions();\n    this.onSetCurrentState(noneDB);\n    this.onSetCurrentResult({\n      receivedRecipes: [],\n      searchedWord: \"\"\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updatePictureDimensions.bind(this));\n  }\n\n  onSetCurrentResult(arg){\n    this.props.onSetCurrentResult(arg);\n  }\n\n  onSetCurrentState(arg) {\n    this.props.onSetCurrentState(arg);\n  }\n\n  render(){\n    return(\n      <div className=\"menuContainer\">\n        <Fade>\n          <div onClick={() => this.onSetCurrentState(mealDB)} className=\"pic mealButton\">\n            <Link to=\"/meal\">\n              <div className=\"buttonTitle\">Meal</div>\n              <MDBView hover zoom>\n                <img alt=\"mealPic\" width={this.state.width} src={this.state.MealPic}/>\n              </MDBView>\n            </Link>\n          </div>\n          <div onClick={() => this.onSetCurrentState(cocktailDB)} className=\"pic cocktailButton\">\n            <Link to=\"/cocktail\">\n              <div className=\"buttonTitle\">Cocktail</div>\n              <MDBView hover zoom>\n                <img alt=\"cocktailPic\" width={this.state.width} src={this.state.CocktailPic}/>\n              </MDBView>\n            </Link>\n          </div>\n        </Fade>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  currentState: state.currentState\n});\n\nconst mapActionsToProps = {\n  onSetCurrentState: setCurrentState,\n  onSetCurrentResult: setCurrentResult\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(MainMenu);\n","import React, {Component} from 'react';\nimport Fade from 'react-reveal/Fade';\nimport {connect} from 'react-redux';\nimport {mealDB, cocktailDB} from '../../data/states';\nimport {setCurrentState, setCurrentResult, setCurrentRecipe} from '../../actions/index';\nimport { Link } from 'react-router-dom';\nimport { MDBView } from 'mdbreact';\nimport '../../styles/RecipePage.css';\n\nclass RecipePage extends Component{\n\n  state = {\n    requestedRecipes: [],\n    searchedWord: \"\",\n    nothingReturned: false,\n    picSize: 0\n  }\n\n  componentDidMount(){\n    window.addEventListener(\"resize\", this.updatePictureDimensions.bind(this));\n    this.updatePictureDimensions();\n\n    if(this.props.currentState.currentDB === \"none\"){\n      if(this.props.match.path === \"/food\"){\n        this.onSetCurrentState(mealDB);\n      }else if(this.props.match.path === \"/cocktail\"){\n        this.onSetCurrentState(cocktailDB);\n      }\n    }\n    let refreshed = this.props.currentResult.receivedRecipes.length !== 0 && this.state.requestedRecipes.length === 0;\n    if(refreshed){\n      this.setState({\n        requestedRecipes: this.props.currentResult.receivedRecipes,\n        searchedWord: this.props.currentResult.searchedWord\n      });\n    }\n  }\n\n  onSetCurrentState(arg){\n    this.props.onSetCurrentState(arg);\n  }\n\n  onSetCurrentResult(arg){\n    this.props.onSetCurrentResult(arg);\n  }\n\n  onSetCurrentRecipe(arg){\n    this.props.onSetCurrentRecipe(arg);\n  }\n\n  getRequestedRecipes = async (e) => {\n    const recipeRequest = e.target.elements.requestedRecipes.value;\n    e.preventDefault();\n    const recipeApi = await fetch(`https://www.${this.props.currentState.currentDB}.com/api/json/v1/1/search.php?s=${recipeRequest}`);\n    const recievedResult = await recipeApi.json();\n    if(recievedResult[this.props.currentState.listProp] !== null){\n      this.setState({requestedRecipes: recievedResult[this.props.currentState.listProp]});\n\n      this.onSetCurrentResult(\n        {\n          receivedRecipes: recievedResult[this.props.currentState.listProp],\n          searchedWord: recipeRequest\n        }\n      );\n      this.setState({nothingReturned: false});\n    }else{\n      this.setState({requestedRecipes:[], nothingReturned: true});\n    }\n  }\n\n  updatePictureDimensions() {\n    if(window.innerWidth < 740) {\n      this.setState({\n        picSize: 300\n      });\n    } else if(window.innerWidth < 1050){\n      this.setState({\n        picSize: 200\n      });\n    }\n    else if(window.innerWidth < 1350){\n      this.setState({\n        picSize: 300\n      });\n    } else {\n      this.setState({\n        picSize: 350\n      });\n    }\n  }\n\n  searchedWordChange(event){\n    const inputValue = event.target.value\n    this.setState({\n      searchedWord: inputValue\n    })\n  }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <Fade>\n          <div className=\"recipePageTitle\">\n            Type {this.props.currentState.component}&apos;s name or an ingridient\n          </div>\n          <form className=\"form\" onSubmit={this.getRequestedRecipes}>\n            <input\n              className=\"searchBar\"\n              name=\"requestedRecipes\"\n              autoComplete=\"off\"\n              value={this.state.searchedWord}\n              onChange={this.searchedWordChange.bind(this)}/>\n            <button className=\"searchButton\"><i className=\"fa fa-search\"></i></button>\n          </form>\n          <div className=\"requestedRecipes row\">\n            { this.state.requestedRecipes.map((recipe) => {\n              return(\n                <div\n                  key={recipe[this.props.currentState.itemIdProp]}\n                  className=\"col-md-4 recipePageItem\"\n                  onClick={() => this.onSetCurrentRecipe(recipe)}\n                  style={{width: this.state.picSize}}\n                  >\n                  <Link to={{pathname: `/${this.props.currentState.component}/${recipe[this.props.currentState.itemIdProp]}`}}>\n                    <Fade>\n                      <MDBView hover zoom width={this.state.picSize}>\n                        <img\n                          className=\"recipePageImg\"\n                          src={recipe[this.props.currentState.imgProp]}\n                          alt={recipe[this.props.currentState.itemProp]}\n                          width=\"100%\"\n                          />\n                      </MDBView>\n                      <h4 className=\"itemTitle\">{recipe[this.props.currentState.itemProp]}</h4>\n                    </Fade>\n                  </Link>\n                </div>\n              );\n            })}\n          </div>\n          {this.state.nothingReturned ? <h4 className=\"noResultMsg\">\n            No {this.props.currentState.component} related to your request was found!\n          </h4>:<div/>}\n        </Fade>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  currentState: state.currentState,\n  currentResult: state.currentResult\n});\n\nconst mapActionsToProps = {\n  onSetCurrentState: setCurrentState,\n  onSetCurrentResult: setCurrentResult,\n  onSetCurrentRecipe: setCurrentRecipe\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(RecipePage);\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport '../../styles/Recipe.css';\n\nclass Recipe extends Component{\n  state = {\n    recipePic: \"\",\n    ingridients: [],\n    recipeTitle: \"\",\n    instruction: \"\",\n    recipeVideoID: \"\",\n    recipeSource: \"\"\n  }\n\n  componentDidMount(){\n    window.scrollTo(0, 0);\n    this.setUp();\n  }\n\n  setUp(){\n    this.setState(\n      {\n        recipePic: this.props.currentRecipe[this.props.imgProp],\n        recipeTitle: this.props.currentRecipe[this.props.itemProp],\n        instruction: this.props.currentRecipe.strInstructions\n      }\n    );\n    this.setYouTubeId();\n    this.setUpIngredients();\n  }\n\n  setUpIngredients(){\n    let ingridientsArray = [];\n    for(let i = 1; i < this.props.numberOfIngredients; i++){\n      let currentIngredient = \"strIngredient\" + i\n      let currentMeasurement = \"strMeasure\" + i\n      if(this.props.currentRecipe[currentIngredient] !== \"\"\n      && this.props.currentRecipe[currentIngredient] !== \" \"\n      && this.props.currentRecipe[currentIngredient] !== null\n    ){\n        ingridientsArray[i] = {\n          id: i,\n          ingridientName: this.props.currentRecipe[currentIngredient],\n          measurement: this.props.currentRecipe[currentMeasurement]\n        };\n      }\n    }\n    this.setState({ ingridients: ingridientsArray });\n  }\n\n  setYouTubeId(){\n    let videoURL = this.props.currentRecipe.strYoutube;\n    if(videoURL !== undefined && videoURL !== \"\"){\n      this.setState({recipeVideoID: videoURL.substring((videoURL.length - 11), videoURL.length)});\n    }\n  }\n\n  renderTableData() {\n    return this.state.ingridients.map((ingredient) => {\n      const { id, ingridientName, measurement } = ingredient\n      return (\n        <tr key={id}>\n          <td>{ingridientName}</td>\n          <td>{measurement}</td>\n        </tr>\n      )\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <h3 className=\"recipeTitle\">{this.state.recipeTitle}</h3>\n        <div className=\"recipeContainer\">\n\n            <img\n              className=\"recipePicture\"\n              src={this.state.recipePic}\n              alt={this.state.recipeTitle}\n              />\n\n          <div className=\"recipeIngredients\">\n            <h4 className=\"textTitle\">Ingridients</h4>\n            <table id='ingredientTable'>\n              <tbody>\n                {this.renderTableData()}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"recipeInstruction\">\n              <h4 className=\"textTitle\">Instructions</h4>\n            <div className=\"recipeInstructionValue\">{this.state.instruction}</div>\n          </div>\n        </div>\n        {this.state.recipeVideoID ?\n          <div className=\"recipeVideo\">\n            <iframe\n              title=\"recipeFrame\"\n              className=\"videoFrame\"\n              src={`https://www.youtube.com/embed/${this.state.recipeVideoID}`}\n              frameBorder=\"0\"\n              allowFullScreen={true}\n              />\n          </div>:<div/>}\n        </div>\n      )\n    }\n  }\n\n  const mapStateToProps = state => ({\n    currentRecipe: state.currentRecipe,\n    numberOfIngredients: state.currentState.numOfIngredients,\n    imgProp: state.currentState.imgProp,\n    itemProp: state.currentState.itemProp\n  });\n\n  export default connect(mapStateToProps)(Recipe);\n","import React, {Component} from 'react';\nimport MainMenu from './contentComponents/MainMenu';\nimport RecipePage from './contentComponents/RecipePage';\nimport Recipe from './contentComponents/Recipe';\nimport { Switch, Route } from 'react-router';\n\nclass Content extends Component {\n  render(){\n    return(\n      <div >\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <MainMenu {...props} />} />\n          <Route exact path=\"/meal\" render={(props) => <RecipePage {...props} />} />\n          <Route exact path=\"/cocktail\" render={(props) => <RecipePage {...props} />} />\n          <Route path=\"/meal/:id\" render={(props) => <Recipe {...props} />} />\n          <Route path=\"/cocktail/:id\" render={(props) => <Recipe {...props} />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport HeaderPicture from './Picture';\nimport Content from './Content';\n\nfunction Home() {\n  return (\n    <div>\n      <HeaderPicture/>\n      <Content/>\n    </div>\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialResult = {\n  receivedRecipes: [],\n  searchedWord: \"\"\n}\n\nconst setResult = (state = initialResult, action) => {\n  switch(action.type){\n    case \"SET_CURRENT_RESULT\":\n      return action.currentResult\n    default:\n      return state\n  }\n}\n\nexport default setResult\n","const initialState = {\n  component: \"none\",\n  currentDB: \"none\",\n  itemIdProp: \"none\",\n  itemProp: \"none\",\n  listProp: \"none\",\n  imgProp:\"none\"\n}\n\nconst setState = (state = initialState, action) => {\n  switch(action.type){\n      case \"SET_CURRENT_STATE\":\n    return action.currentState\n    default:\n      return state\n  }\n}\n\nexport default setState\n","const initialResult = {}\n\nconst setRecipe = (state = initialResult, action) => {\n  switch(action.type){\n    case \"SET_CURRENT_RECIPE\":\n      return action.currentRecipe\n    default:\n      return state\n  }\n}\n\nexport default setRecipe\n","import { combineReducers } from 'redux';\nimport currentResult from './result';\nimport currentState from './state';\nimport currentRecipe from './recipe';\n\nexport default combineReducers({\n  currentResult,\n  currentState,\n  currentRecipe\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"mdbreact/dist/css/mdb.css\";\n\nfunction saveToLocalStorage(state){\n  try{\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  }catch(e){\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch(e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\n\nconst store = createStore(rootReducer, persistedState);\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Home />\n    </HashRouter>\n  </Provider>, document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}